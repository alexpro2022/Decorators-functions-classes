Тестовое задание №1 - аналитическая работа (ориентировочное время выполнения - 2 часа). 
Нужно найти и проанализировать несколько Python-библиотек, специализирующихся на асинхронных запросах к внешним источникам в интернете. Библиотека должна помочь регулярно опрашивать статус коды ответа ста тысяч сайтов за минимальное время, при этом не попасть под блокировку со стороны хостинга и с минимальным потреблением CPU и RAM. 
Предоставить отчет в виде таблицы (ссылка на гуглдок), с описанием основных характеристик, плюсов и минусов каждой из библиотек. В последней строчке таблицы должен содержаться общий вывод - какую из библиотек вы бы выбрали для использования и почему.

Тестовое задание №2 - реализация функций и классов (ориентировочной время выполнения - 4 часа).
Все решения нужно поместить в один репозиторий, в нем же подготовить тестовые данные. Для проверки должно быть достаточно запустить один файл. Не забудьте описать процесс запуска в readme проекта.
A. Функция принимает в качестве аргумента набор ссылок. Ссылки имеют формат ссылок на проекты на гитхабе (например: https://github.com/miguelgrinberg/Flask-SocketIO, https://github.com/miguelgrinberg/Flask-SocketIO.git). Функция должна обработать полученные ссылки и вывести в консоль названия самих гит-проектов. Стоит рассмотреть защиту от ссылок "вне формата".
B. Реализовать функцию, принимающую два списка и возвращающую словарь (ключ из первого списка, значение из второго), упорядоченный по ключам. Результат вывести в консоль. Длина первого списка не должна быть равна длине второго. Результат вывести в консоль.
C. Реализовать функцию с помощью методов map и lambda. Функция принимает список элементов (состоящий из строк и цифр), возвращает новый список, с условием - если элемент списка был строкой, в начало строки нужно добавить текст "abc_", в конец строки - "_cba". Если элемент был int - то его значение нужно возвести в квадрат. Результат вывести в консоль.
D. Реализовать функцию, которая замеряет время на исполнение 100 запросов к адресу: http://httpbin.org/delay/3. Запросы должны выполняться асинхронно. Допускается написание вспомогательных функций и использование сторонних библиотек. Результат замера времени выводит в консоль. Ожидаемое время не должно превышать 10 секунд.
E. Написать класс, принимающий на вход текст. Один метод класса должен выводить в консоль самое длинное слово в тексте. Второй метод - самое часто встречающееся слово. Третий метод выводит количество спецсимволов в тексте (точки, запятые и так далее). Четвертый метод выводит все палиндромы через запятую.
F. Написать декоратор к предыдущему классу, который будет выводить в консоль время выполнения каждого метода. Результат выполнения задания должен быть оформлен в виде файла с кодом.
Я нем и рад я,
так, трамвай,
январь равняй,
а в март катя,
дари меня. топот?
шабаш! котяток, манекенам шалаш abc_cba abc-cba.
A man, a plan, a canal-Panama!
А в Енисее — синева.
А роза упала на лапу Азора.
.
